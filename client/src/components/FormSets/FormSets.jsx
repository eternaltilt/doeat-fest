/* eslint-disable no-unused-vars */
import { useNavigate } from 'react-router-dom';
import { useDispatch, useSelector } from 'react-redux';
import { useCallback, useEffect, useState } from 'react';
import {
  fetchDelitSession,
  formSetFetch,
  festivalFetch,
  fetchAddFestival,
  managerFetch,
  delManager,
} from '../../redux/thunk';
import style from './FormSets.module.css';


function FormSets() {
  const [img, setImg] = useState(null);
  const { festival } = useSelector((state) => state.festivalReducer);
  const dispatch = useDispatch();
  const navigate = useNavigate();
  // –≤—ã—Ö–æ–¥, –æ—á–∏—â–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏
  const toLogout = async () => {
    await dispatch(fetchDelitSession());
    localStorage.clear();
    navigate('/admin');
  };
  const rezultat = festival || [];

  // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—É –∏ —Ñ–µ—Å—Ç–∏–≤–∞–ª—é
  const onSubmit = (e) => {
    e.preventDefault();
    const {
      titleSets,
      adress,
      phone,
      link,
      setDescription,
      firstDish,
      secondDish,
      thirdDish,
      allWeight,
      titleRest,
      description,
      festivalId,
      worktime,
      imgRest,
    } = e.target;

    const body = {
      titleSets: titleSets.value,
      setDescription: setDescription.value,
      firstDish: firstDish.value,
      secondDish: secondDish.value,
      thirdDish: thirdDish.value,
      allWeight: allWeight.value,
      titleRest: titleRest.value,
      description: description.value,
      adress: adress.value,
      link: link.value,
      phone: phone.value,
      festivalId: festivalId.value,
      worktime: worktime.value,
      imgRest: imgRest.value
    };
    e.target.reset();
    dispatch(formSetFetch(body));
  };

  const onSubmitFest = (e) => {
    e.preventDefault();
    const { festivalName, festivalDescription, festivalStart, festivalEnd, festivalSetPrice } =
      e.target;
    const body = {
      festivalName: festivalName.value,
      festivalDescription: festivalDescription.value,
      festivalStart: festivalStart.value,
      festivalEnd: festivalEnd.value,
      festivalSetPrice: festivalSetPrice.value,
    };
    e.target.reset();
    dispatch(fetchAddFestival(body));
  };


  // –≤—ã—Ç–∞—Å–∫–∏–≤–∞–µ–º –≤—Å–µ —Ñ–µ—Å—Ç–∏–≤–∞–ª–∏
  // const festival1 = () => {
  //   dispatch(festivalFetch());
  // };

  // –∑–∞—è–≤–∫–∏ –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤
  useEffect(()=>{
    dispatch(managerFetch())
    dispatch(festivalFetch());
  },[])
  const { RestaurantManager } = useSelector((state) => state.applicationReducer);
 

  // —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏
  const deleteManager = (id) =>{
    dispatch(delManager(id))
  }


  return (
    <>
 <div>
     <form className={style.form} onSubmit={onSubmit} action="">
       <button onClick ={toLogout} className={style.formBtnExit} type='button'>–í—ã–π—Ç–∏</button> <br />
       <div  className={style.title} >–î–æ–±–∞–≤–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞</div>
     <div className={style.formContainer}  id="sets">
      <div className={style.rightContainer} >
       <input type="text"
        id="titleSets"
        className={style.inputSize} 
        placeholder='–ù–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ç–∞' 
        autoComplete="off"/>
       <input type="text"
        id='firstDish'
        className={style.inputSize}
        placeholder='1 –±–ª—é–¥–æ'
        autoComplete="off" />
       <input type="text"
        id='secondDish'
        className={style.inputSize}
        placeholder='2 –±–ª—é–¥–æ'
        autoComplete="off"/>
       <input type="text"
        id='thirdDish'
        className={style.inputSize}
        placeholder='3 –±–ª—é–¥–æ'
        autoComplete="off"/>
       <input type="text"
        id='setDescription'
        className={style.inputSize}
        placeholder='–û–ø–∏—Å–∞–Ω–∏–µ —Å–µ—Ç–∞'
        autoComplete="off"/>
       <input type="text"
        id='allWeight'
        className={style.inputSize}
        placeholder='–í–µ—Å'
        autoComplete="off"/>
       <select
        className={style.inputSize}
        placeholder='–§–µ—Å—Ç–∏–≤–∞–ª—å'
        id="festivalId">
       {rezultat.map((el)=> (<option key={el.id} value={el.id}>{el.title}</option>) )}  
       </select>
       </div>
       <div id="Resta" className={style.leftContainer}>
       <input type="text"
        id='titleRest'
        className={style.inputSize}
        placeholder='–ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è'
        autoComplete="off" />
       <input type="text"
        id='adress'
        className={style.inputSize}
        placeholder='–ê–¥—Ä–µ—Å –∑–∞–≤–µ–¥–µ–Ω–∏—è'
        autoComplete="off"/>
       <input type="text"
        id='phone'
        className={style.inputSize}
        placeholder='–¢–µ–ª–µ—Ñ–æ–Ω'
        autoComplete="off"/>
       <input type="text"
        id='description'
        className={style.inputSize}
        placeholder='–û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–≤–µ–¥–µ–Ω–∏—è'
        autoComplete="off"/>
       <input type="text"
        id='link'
        className={style.inputSize}
        placeholder='—Å—Å—ã–ª–æ—á–∫–∞ –Ω–∞ —Ä–µ—Å—Ç–æ—Ä–∞–Ω'
        autoComplete="off"/>
       <input type="text"
        id='worktime'
        className={style.inputSize}
        placeholder='–≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞'
        autoComplete="off"/>
       <input type="text"
        id='imgRest'
        className={style.inputSize}
        placeholder='–¢–£–¢ –î–û–ë–ê–í–õ–ï–ù–ò–ï –§–û–¢–û–ì–†–ê–§–ò–ò'
        autoComplete="off"/>
       <button className={style.formBtn} type="submit">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
       <button className={style.formBtn} type="submit">–î–æ–±–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ</button>
     </div>
     </div>
     </form>
    </div>


      <h3 className={style.festFormTitle}>–ó–∞—è–≤–∫–∏</h3>
        <section className={style.Formapp}>
         {RestaurantManager.map((el)=>(<ul className={style.manager} key={el.id}>
           <li className={style.application}>{el.name}</li>
           <li className={style.application}>{el.phone_number}</li>
           <li className={style.application}>{el.email}</li>
           <li className={style.application}>{el.restaurant_name}</li>
           <li className={style.application}>{rezultat.map((res)=>res.id === el.festival_id)}</li>
           <button onClick={()=>deleteManager(el.id)} className={style.delete} type="submit">
           üóë
            </button>
           </ul>))}
         </section>
       



      <h3 className={style.festFormTitle}>–°–æ–∑–¥–∞—Ç—å —Ñ–µ—Å—Ç–∏–≤–∞–ª—å</h3>
      <section className={style.festForm}>
        <div className={style.festFormContainer}>
          <form onSubmit={onSubmitFest} action="" method="post">
            <div>
              <input
                type="text"
                id="festivalName"
                name="festivalName"
                placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–µ—Å—Ç–∏–≤–∞–ª—è"
                autoComplete="off"
              />
            </div>
            <div>
              <input
                type="text"
                id="festivalDescription"
                name="festivalDescription"
                placeholder="–û–ø–∏—Å–∞–Ω–∏–µ —Ñ–µ—Å—Ç–∏–≤–∞–ª—è"
                autoComplete="off"
              />
            </div>
            <div>
              <input
                type="date"
                id="festivalStart"
                name="festivalStart"
                placeholder="–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞"
                autoComplete="off"
              />
            </div>
            <div>
              <input
                type="date"
                id="festivalEnd"
                name="festivalEnd"
                placeholder="–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è"
                autoComplete="off"
              />
            </div>
            <div>
              <input
                type="text"
                id="festivalSetPrice"
                name="festivalSetPrice"
                placeholder="–°—Ç–æ–∏–º–æ—Å—Ç—å —Å–µ—Ç–∞"
                autoComplete="off"
              />
            </div>
            <button type="submit">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
          </form>
        </div>
        
      </section>
    </>
  );
}

export default FormSets;
